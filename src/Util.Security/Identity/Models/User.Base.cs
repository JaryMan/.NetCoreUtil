////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Identity\Models\User.Base.cs
//
// summary:	Implements the user. base class
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace Util.Security.Identity.Models
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   用户. </summary>
    ///
    /// <remarks>   DELL, 2018/6/29. </remarks>
    ///
    /// <typeparam name="TUser">    用户类型. </typeparam>
    /// <typeparam name="TKey">     用户标识类型. </typeparam>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DisplayName( "用户" )]
    public abstract partial class User<TUser,TKey> {

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   初始化用户. </summary>
        ///
        /// <remarks>   DELL, 2018/6/29. </remarks>
        ///
        /// <param name="id">   用户标识. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   用户名. </summary>
        ///
        /// <value> The name of the user. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "用户名" )]
        [StringLength( 256, ErrorMessage = "用户名输入过长，不能超过256位" )]
        public string UserName { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   标准化用户名. </summary>
        ///
        /// <value> The name of the normalized user. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "标准化用户名" )]
        [StringLength( 256, ErrorMessage = "标准化用户名输入过长，不能超过256位" )]
        public string NormalizedUserName { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   安全邮箱. </summary>
        ///
        /// <value> The email. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "安全邮箱" )]
        [StringLength( 256, ErrorMessage = "安全邮箱输入过长，不能超过256位" )]
        public string Email { get;set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   标准化邮箱. </summary>
        ///
        /// <value> The normalized email. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "标准化邮箱" )]
        [StringLength( 256, ErrorMessage = "标准化邮箱输入过长，不能超过256位" )]
        public string NormalizedEmail { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   邮箱已确认. </summary>
        ///
        /// <value> True if email confirmed, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "邮箱已确认" )]
        public bool EmailConfirmed { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   安全手机. </summary>
        ///
        /// <value> The phone number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "安全手机" )]
        [StringLength( 64, ErrorMessage = "安全手机输入过长，不能超过64位" )]
        public string PhoneNumber { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   手机已确认. </summary>
        ///
        /// <value> True if phone number confirmed, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "手机已确认" )]
        public bool PhoneNumberConfirmed { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   密码. </summary>
        ///
        /// <value> The password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "密码" )]
        [Required( ErrorMessage = "密码不能为空" )]
        [StringLength( 256, ErrorMessage = "密码输入过长，不能超过256位" )]
        public string Password { get; private set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   密码散列. </summary>
        ///
        /// <value> The password hash. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "密码散列" )]
        [StringLength( 1024, ErrorMessage = "密码散列输入过长，不能超过1024位" )]
        public string PasswordHash { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   安全码. </summary>
        ///
        /// <value> The safe password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "安全码" )]
        [StringLength( 256, ErrorMessage = "安全码输入过长，不能超过256位" )]
        public string SafePassword { get; private set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   安全码散列. </summary>
        ///
        /// <value> The safe password hash. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "安全码散列" )]
        [StringLength( 1024, ErrorMessage = "安全码散列输入过长，不能超过1024位" )]
        public string SafePasswordHash { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   启用锁定. </summary>
        ///
        /// <value> True if lockout enabled, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "启用锁定" )]
        public bool LockoutEnabled { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   锁定截止. </summary>
        ///
        /// <value> The lockout end. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "锁定截止" )]
        public DateTimeOffset? LockoutEnd { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   上次登陆时间. </summary>
        ///
        /// <value> The last login time. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "上次登陆时间" )]
        public DateTime? LastLoginTime { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   上次登陆Ip. </summary>
        ///
        /// <value> The last login IP. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "上次登陆Ip" )]
        [StringLength( 30, ErrorMessage = "上次登陆Ip输入过长，不能超过30位" )]
        public string LastLoginIp { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   本次登陆时间. </summary>
        ///
        /// <value> The current login time. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "本次登陆时间" )]
        public DateTime? CurrentLoginTime { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   本次登陆Ip. </summary>
        ///
        /// <value> The current login IP. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "本次登陆Ip" )]
        [StringLength( 30, ErrorMessage = "本次登陆Ip输入过长，不能超过30位" )]
        public string CurrentLoginIp { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   登陆次数. </summary>
        ///
        /// <value> The number of logins. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "登陆次数" )]
        public int? LoginCount { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   登陆失败次数. </summary>
        ///
        /// <value> The number of access failed. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "登陆失败次数" )]
        public int AccessFailedCount { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   启用两阶段认证. </summary>
        ///
        /// <value> True if two factor enabled, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "启用两阶段认证" )]
        public bool TwoFactorEnabled { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   启用. </summary>
        ///
        /// <value> True if enabled, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "启用" )]
        public bool Enabled { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   冻结时间. </summary>
        ///
        /// <value> The disabled time. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "冻结时间" )]
        public DateTime? DisabledTime { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   注册Ip. </summary>
        ///
        /// <value> The register IP. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "注册Ip" )]
        [StringLength( 30, ErrorMessage = "注册Ip输入过长，不能超过30位" )]
        public string RegisterIp { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   安全戳. </summary>
        ///
        /// <value> The security stamp. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "安全戳" )]
        [StringLength( 1024, ErrorMessage = "安全戳输入过长，不能超过1024位" )]
        public string SecurityStamp { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   备注. </summary>
        ///
        /// <value> The comment. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "备注" )]
        [StringLength( 500, ErrorMessage = "备注输入过长，不能超过500位" )]
        public string Comment { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   创建时间. </summary>
        ///
        /// <value> The creation time. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "创建时间" )]
        public DateTime? CreationTime { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   创建人. </summary>
        ///
        /// <value> The identifier of the creator. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "创建人" )]
        public Guid? CreatorId { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   最后修改时间. </summary>
        ///
        /// <value> The last modification time. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "最后修改时间" )]
        public DateTime? LastModificationTime { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   最后修改人. </summary>
        ///
        /// <value> The identifier of the last modifier. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "最后修改人" )]
        public Guid? LastModifierId { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   是否删除. </summary>
        ///
        /// <value> True if this object is deleted, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DisplayName( "是否删除" )]
        public bool IsDeleted { get; set; }
    }
}